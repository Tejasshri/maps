{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejas\\\\OneDrive\\\\Documents\\\\CION\\\\Hyderabad_Map_Project\\\\google-places-api-demo\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\n// Map.js\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, useLoadScript, Polygon } from \"@react-google-maps/api\";\nimport { REACT_APP_GOOGLE_MAPS_KEY } from \"../constants/constants\";\nimport boundaryData from \"./boundary.geojson\"; // Adjust the path and filename\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = _ref => {\n  _s();\n  let {\n    selectedLocation\n  } = _ref;\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY,\n    libraries: [\"places\"]\n  });\n  const [geoJsonFeatures, setGeoJsonFeatures] = useState([]);\n  useEffect(() => {\n    // Simulating loading GeoJSON data from a file\n    setGeoJsonFeatures(boundaryData.features);\n  }, []);\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"100%\"\n  };\n  const center = {\n    lat: selectedLocation.lat,\n    lng: selectedLocation.lng\n  };\n  const zoom = 12;\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: center,\n      zoom: zoom,\n      children: geoJsonFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(Polygon, {\n        paths: feature.geometry.coordinates[0].map(coord => ({\n          lat: coord[1],\n          // GeoJSON coordinates are [lng, lat]\n          lng: coord[0]\n        })),\n        options: {\n          strokeColor: \"red\",\n          // Red stroke color\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: \"#ff0000\",\n          // Red fill color (adjust as needed)\n          fillOpacity: 0.35\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"e8Rh1/bzEKot7DoE1oiu4UrS3LE=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","useLoadScript","Polygon","REACT_APP_GOOGLE_MAPS_KEY","boundaryData","MapComponent","selectedLocation","isLoaded","loadError","googleMapsApiKey","libraries","geoJsonFeatures","setGeoJsonFeatures","features","mapContainerStyle","width","height","center","lat","lng","zoom","map","feature","index","geometry","coordinates","coord","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity"],"sources":["C:/Users/tejas/OneDrive/Documents/CION/Hyderabad_Map_Project/google-places-api-demo/src/components/Map.js"],"sourcesContent":["// Map.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { GoogleMap, useLoadScript, Polygon } from \"@react-google-maps/api\";\r\nimport { REACT_APP_GOOGLE_MAPS_KEY } from \"../constants/constants\";\r\nimport boundaryData from \"./boundary.geojson\"; // Adjust the path and filename\r\n\r\nconst MapComponent = ({ selectedLocation }) => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY,\r\n    libraries: [\"places\"],\r\n  });\r\n\r\n  const [geoJsonFeatures, setGeoJsonFeatures] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simulating loading GeoJSON data from a file\r\n    setGeoJsonFeatures(boundaryData.features);\r\n  }, []);\r\n\r\n  const mapContainerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  };\r\n\r\n  const center = {\r\n    lat: selectedLocation.lat,\r\n    lng: selectedLocation.lng,\r\n  };\r\n\r\n  const zoom = 12;\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading maps\";\r\n\r\n  return (\r\n    <div style={{ height: \"100%\", width: \"100%\" }}>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        center={center}\r\n        zoom={zoom}\r\n      >\r\n        {/* Render polygons for each GeoJSON feature */}\r\n        {geoJsonFeatures.map((feature, index) => (\r\n          <Polygon\r\n            key={index}\r\n            paths={feature.geometry.coordinates[0].map(coord => ({\r\n              lat: coord[1], // GeoJSON coordinates are [lng, lat]\r\n              lng: coord[0],\r\n            }))}\r\n            options={{\r\n              strokeColor: \"red\", // Red stroke color\r\n              strokeOpacity: 0.8,\r\n              strokeWeight: 2,\r\n              fillColor: \"#ff0000\", // Red fill color (adjust as needed)\r\n              fillOpacity: 0.35,\r\n            }}\r\n          />\r\n        ))}\r\n\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,aAAa,EAAEC,OAAO,QAAQ,wBAAwB;AAC1E,SAASC,yBAAyB,QAAQ,wBAAwB;AAClE,OAAOC,YAAY,MAAM,oBAAoB,CAAC,CAAC;AAAA;AAE/C,MAAMC,YAAY,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAAEC;EAAiB,CAAC;EACxC,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGP,aAAa,CAAC;IAC5CQ,gBAAgB,EAAEN,yBAAyB;IAC3CO,SAAS,EAAE,CAAC,QAAQ;EACtB,CAAC,CAAC;EAEF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd;IACAa,kBAAkB,CAACR,YAAY,CAACS,QAAQ,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAG;IACxBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,MAAM,GAAG;IACbC,GAAG,EAAEZ,gBAAgB,CAACY,GAAG;IACzBC,GAAG,EAAEb,gBAAgB,CAACa;EACxB,CAAC;EAED,MAAMC,IAAI,GAAG,EAAE;EAEf,IAAIZ,SAAS,EAAE,OAAO,oBAAoB;EAC1C,IAAI,CAACD,QAAQ,EAAE,OAAO,cAAc;EAEpC,oBACE;IAAK,KAAK,EAAE;MAAES,MAAM,EAAE,MAAM;MAAED,KAAK,EAAE;IAAO,CAAE;IAAA,uBAC5C,QAAC,SAAS;MACR,iBAAiB,EAAED,iBAAkB;MACrC,MAAM,EAAEG,MAAO;MACf,IAAI,EAAEG,IAAK;MAAA,UAGVT,eAAe,CAACU,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAClC,QAAC,OAAO;QAEN,KAAK,EAAED,OAAO,CAACE,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACJ,GAAG,CAACK,KAAK,KAAK;UACnDR,GAAG,EAAEQ,KAAK,CAAC,CAAC,CAAC;UAAE;UACfP,GAAG,EAAEO,KAAK,CAAC,CAAC;QACd,CAAC,CAAC,CAAE;QACJ,OAAO,EAAE;UACPC,WAAW,EAAE,KAAK;UAAE;UACpBC,aAAa,EAAE,GAAG;UAClBC,YAAY,EAAE,CAAC;UACfC,SAAS,EAAE,SAAS;UAAE;UACtBC,WAAW,EAAE;QACf;MAAE,GAXGR,KAAK;QAAA;QAAA;QAAA;MAAA,QAab;IAAC;MAAA;MAAA;MAAA;IAAA;EAEQ;IAAA;IAAA;IAAA;EAAA,QACR;AAEV,CAAC;AAAC,GAxDIlB,YAAY;EAAA,QACgBJ,aAAa;AAAA;AAAA,KADzCI,YAAY;AA0DlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}