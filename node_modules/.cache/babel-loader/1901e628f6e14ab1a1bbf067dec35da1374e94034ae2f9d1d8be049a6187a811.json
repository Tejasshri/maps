{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejas\\\\OneDrive\\\\Documents\\\\CION\\\\Hyderabad_Map_Project\\\\google-places-api-demo\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleMap, useLoadScript, Polygon } from \"@react-google-maps/api\";\nimport { REACT_APP_GOOGLE_MAPS_KEY } from \"../constants/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = _ref => {\n  _s();\n  let {\n    selectedLocation\n  } = _ref;\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY,\n    libraries: [\"places\"]\n  });\n  const [hyderabadPincodesData, setHyderabadPincodesData] = useState([]);\n\n  // Example data for pincode boundaries in Hyderabad\n  const pincodesData = [{\n    pincode: \"500001\",\n    coordinates: [{\n      lat: 17.391798,\n      lng: 78.479708\n    }, {\n      lat: 17.387222,\n      lng: 78.476506\n    }, {\n      lat: 17.386337,\n      lng: 78.479297\n    }, {\n      lat: 17.390914,\n      lng: 78.48259\n    }]\n  }, {\n    pincode: \"500002\",\n    coordinates: [{\n      lat: 17.395223,\n      lng: 78.471736\n    }, {\n      lat: 17.389402,\n      lng: 78.46653\n    }, {\n      lat: 17.384607,\n      lng: 78.471899\n    }, {\n      lat: 17.390341,\n      lng: 78.477059\n    }]\n  }\n  // Add more pincode data as needed\n  ];\n\n  useEffect(() => {\n    // Simulate data fetching or update based on props\n    // Replace with actual data fetching logic as needed\n    setTimeout(() => {\n      setHyderabadPincodesData(pincodesData);\n    }, 500);\n  }, []);\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"100%\"\n  };\n  const center = {\n    lat: selectedLocation.lat || 17.385044,\n    // Default to Hyderabad's center if selectedLocation is not available\n    lng: selectedLocation.lng || 78.486671\n  };\n  const zoom = 10;\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: center,\n      zoom: zoom,\n      children: hyderabadPincodesData.map((pincodeData, index) => /*#__PURE__*/_jsxDEV(Polygon, {\n        paths: pincodeData.coordinates,\n        options: {\n          strokeColor: \"#FF0000\",\n          // Red stroke color\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: \"#FF0000\",\n          // Red fill color (adjust as needed)\n          fillOpacity: 0.35\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"F6aOhZqXwulrxbM4QgV91PhypsE=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","useLoadScript","Polygon","REACT_APP_GOOGLE_MAPS_KEY","MapComponent","selectedLocation","isLoaded","loadError","googleMapsApiKey","libraries","hyderabadPincodesData","setHyderabadPincodesData","pincodesData","pincode","coordinates","lat","lng","setTimeout","mapContainerStyle","width","height","center","zoom","map","pincodeData","index","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity"],"sources":["C:/Users/tejas/OneDrive/Documents/CION/Hyderabad_Map_Project/google-places-api-demo/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { GoogleMap, useLoadScript, Polygon } from \"@react-google-maps/api\";\r\nimport { REACT_APP_GOOGLE_MAPS_KEY } from \"../constants/constants\";\r\n\r\nconst MapComponent = ({ selectedLocation }) => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY,\r\n    libraries: [\"places\"],\r\n  });\r\n  const [hyderabadPincodesData, setHyderabadPincodesData] = useState([]);\r\n\r\n  // Example data for pincode boundaries in Hyderabad\r\n  const pincodesData = [\r\n    {\r\n      pincode: \"500001\",\r\n      coordinates: [\r\n        { lat: 17.391798, lng: 78.479708 },\r\n        { lat: 17.387222, lng: 78.476506 },\r\n        { lat: 17.386337, lng: 78.479297 },\r\n        { lat: 17.390914, lng: 78.48259 },\r\n      ],\r\n    },\r\n    {\r\n      pincode: \"500002\",\r\n      coordinates: [\r\n        { lat: 17.395223, lng: 78.471736 },\r\n        { lat: 17.389402, lng: 78.46653 },\r\n        { lat: 17.384607, lng: 78.471899 },\r\n        { lat: 17.390341, lng: 78.477059 },\r\n      ],\r\n    },\r\n    // Add more pincode data as needed\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Simulate data fetching or update based on props\r\n    // Replace with actual data fetching logic as needed\r\n    setTimeout(() => {\r\n      setHyderabadPincodesData(pincodesData);\r\n    }, 500);\r\n  }, []);\r\n\r\n  const mapContainerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  };\r\n\r\n  const center = {\r\n    lat: selectedLocation.lat || 17.385044, // Default to Hyderabad's center if selectedLocation is not available\r\n    lng: selectedLocation.lng || 78.486671,\r\n  };\r\n\r\n  const zoom = 10;\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading maps\";\r\n\r\n  return (\r\n    <div style={{ height: \"100%\", width: \"100%\" }}>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        center={center}\r\n        zoom={zoom}\r\n      >\r\n        {hyderabadPincodesData.map((pincodeData, index) => (\r\n          <Polygon\r\n            key={index}\r\n            paths={pincodeData.coordinates}\r\n            options={{\r\n              strokeColor: \"#FF0000\", // Red stroke color\r\n              strokeOpacity: 0.8,\r\n              strokeWeight: 2,\r\n              fillColor: \"#FF0000\", // Red fill color (adjust as needed)\r\n              fillOpacity: 0.35,\r\n            }}\r\n          />\r\n        ))}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,aAAa,EAAEC,OAAO,QAAQ,wBAAwB;AAC1E,SAASC,yBAAyB,QAAQ,wBAAwB;AAAC;AAEnE,MAAMC,YAAY,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAAEC;EAAiB,CAAC;EACxC,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGN,aAAa,CAAC;IAC5CO,gBAAgB,EAAEL,yBAAyB;IAC3CM,SAAS,EAAE,CAAC,QAAQ;EACtB,CAAC,CAAC;EACF,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtE;EACA,MAAMa,YAAY,GAAG,CACnB;IACEC,OAAO,EAAE,QAAQ;IACjBC,WAAW,EAAE,CACX;MAAEC,GAAG,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAU,CAAC,EAClC;MAAED,GAAG,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAU,CAAC,EAClC;MAAED,GAAG,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAU,CAAC,EAClC;MAAED,GAAG,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAS,CAAC;EAErC,CAAC,EACD;IACEH,OAAO,EAAE,QAAQ;IACjBC,WAAW,EAAE,CACX;MAAEC,GAAG,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAU,CAAC,EAClC;MAAED,GAAG,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAS,CAAC,EACjC;MAAED,GAAG,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAU,CAAC,EAClC;MAAED,GAAG,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAU,CAAC;EAEtC;EACA;EAAA,CACD;;EAEDlB,SAAS,CAAC,MAAM;IACd;IACA;IACAmB,UAAU,CAAC,MAAM;MACfN,wBAAwB,CAACC,YAAY,CAAC;IACxC,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,iBAAiB,GAAG;IACxBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,MAAM,GAAG;IACbN,GAAG,EAAEV,gBAAgB,CAACU,GAAG,IAAI,SAAS;IAAE;IACxCC,GAAG,EAAEX,gBAAgB,CAACW,GAAG,IAAI;EAC/B,CAAC;EAED,MAAMM,IAAI,GAAG,EAAE;EAEf,IAAIf,SAAS,EAAE,OAAO,oBAAoB;EAC1C,IAAI,CAACD,QAAQ,EAAE,OAAO,cAAc;EAEpC,oBACE;IAAK,KAAK,EAAE;MAAEc,MAAM,EAAE,MAAM;MAAED,KAAK,EAAE;IAAO,CAAE;IAAA,uBAC5C,QAAC,SAAS;MACR,iBAAiB,EAAED,iBAAkB;MACrC,MAAM,EAAEG,MAAO;MACf,IAAI,EAAEC,IAAK;MAAA,UAEVZ,qBAAqB,CAACa,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBAC5C,QAAC,OAAO;QAEN,KAAK,EAAED,WAAW,CAACV,WAAY;QAC/B,OAAO,EAAE;UACPY,WAAW,EAAE,SAAS;UAAE;UACxBC,aAAa,EAAE,GAAG;UAClBC,YAAY,EAAE,CAAC;UACfC,SAAS,EAAE,SAAS;UAAE;UACtBC,WAAW,EAAE;QACf;MAAE,GARGL,KAAK;QAAA;QAAA;QAAA;MAAA,QAUb;IAAC;MAAA;MAAA;MAAA;IAAA;EACQ;IAAA;IAAA;IAAA;EAAA,QACR;AAEV,CAAC;AAAC,GA5EIrB,YAAY;EAAA,QACgBH,aAAa;AAAA;AAAA,KADzCG,YAAY;AA8ElB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}