{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejas\\\\OneDrive\\\\Documents\\\\CION\\\\Hyderabad_Map_Project\\\\google-places-api-demo\\\\src\\\\components\\\\GooglePlcasesApi.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { REACT_APP_GOOGLE_MAPS_KEY } from \"../constants/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchLocationInput = _ref => {\n  _s();\n  let {\n    setSelectedLocation\n  } = _ref;\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n  const [autoComplete, setAutoComplete] = useState(null);\n  const handleScriptLoad = () => {\n    const autoCompleteInstance = new window.google.maps.places.Autocomplete(autoCompleteRef.current, {\n      componentRestrictions: {\n        country: \"IN\"\n      }\n    });\n    autoCompleteInstance.addListener(\"place_changed\", handlePlaceSelect);\n    setAutoComplete(autoCompleteInstance);\n  };\n  const handlePlaceSelect = () => {\n    var _addressObject$geomet, _addressObject$geomet2, _addressObject$geomet3, _addressObject$geomet4;\n    const addressObject = autoComplete.getPlace();\n    const query = addressObject.formatted_address;\n    setQuery(query);\n    const latLng = {\n      lat: addressObject === null || addressObject === void 0 ? void 0 : (_addressObject$geomet = addressObject.geometry) === null || _addressObject$geomet === void 0 ? void 0 : (_addressObject$geomet2 = _addressObject$geomet.location) === null || _addressObject$geomet2 === void 0 ? void 0 : _addressObject$geomet2.lat(),\n      lng: addressObject === null || addressObject === void 0 ? void 0 : (_addressObject$geomet3 = addressObject.geometry) === null || _addressObject$geomet3 === void 0 ? void 0 : (_addressObject$geomet4 = _addressObject$geomet3.location) === null || _addressObject$geomet4 === void 0 ? void 0 : _addressObject$geomet4.lng()\n    };\n    setSelectedLocation(latLng);\n  };\n  useEffect(() => {\n    if (!window.google) {\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${REACT_APP_GOOGLE_MAPS_KEY}&libraries=places`;\n      script.async = true;\n      script.onload = handleScriptLoad;\n      document.head.appendChild(script);\n      return () => {\n        document.head.removeChild(script);\n      };\n    } else {\n      handleScriptLoad();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-location-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Type in your suburb or postcode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: autoCompleteRef,\n      className: \"form-control\",\n      onChange: event => setQuery(event.target.value),\n      placeholder: \"Search Places ...\",\n      value: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchLocationInput, \"IPpxPrWKoWHBI0CtqbLzZlVVGUg=\");\n_c = SearchLocationInput;\nexport default SearchLocationInput;\nvar _c;\n$RefreshReg$(_c, \"SearchLocationInput\");","map":{"version":3,"names":["React","useEffect","useRef","useState","REACT_APP_GOOGLE_MAPS_KEY","SearchLocationInput","setSelectedLocation","query","setQuery","autoCompleteRef","autoComplete","setAutoComplete","handleScriptLoad","autoCompleteInstance","window","google","maps","places","Autocomplete","current","componentRestrictions","country","addListener","handlePlaceSelect","addressObject","getPlace","formatted_address","latLng","lat","geometry","location","lng","script","document","createElement","type","src","async","onload","head","appendChild","removeChild","event","target","value"],"sources":["C:/Users/tejas/OneDrive/Documents/CION/Hyderabad_Map_Project/google-places-api-demo/src/components/GooglePlcasesApi.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { REACT_APP_GOOGLE_MAPS_KEY } from \"../constants/constants\";\r\n\r\nconst SearchLocationInput = ({ setSelectedLocation }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const autoCompleteRef = useRef(null);\r\n  const [autoComplete, setAutoComplete] = useState(null);\r\n\r\n  const handleScriptLoad = () => {\r\n    const autoCompleteInstance = new window.google.maps.places.Autocomplete(\r\n      autoCompleteRef.current,\r\n      {\r\n        componentRestrictions: { country: \"IN\" },\r\n      }\r\n    );\r\n\r\n    autoCompleteInstance.addListener(\"place_changed\", handlePlaceSelect);\r\n    setAutoComplete(autoCompleteInstance);\r\n  };\r\n\r\n  const handlePlaceSelect = () => {\r\n    const addressObject = autoComplete.getPlace();\r\n\r\n    const query = addressObject.formatted_address;\r\n    setQuery(query);\r\n\r\n    const latLng = {\r\n      lat: addressObject?.geometry?.location?.lat(),\r\n      lng: addressObject?.geometry?.location?.lng(),\r\n    };\r\n\r\n    setSelectedLocation(latLng);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.google) {\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${REACT_APP_GOOGLE_MAPS_KEY}&libraries=places`;\r\n      script.async = true;\r\n      script.onload = handleScriptLoad;\r\n\r\n      document.head.appendChild(script);\r\n\r\n      return () => {\r\n        document.head.removeChild(script);\r\n      };\r\n    } else {\r\n      handleScriptLoad();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"search-location-input\">\r\n      <label>Type in your suburb or postcode</label>\r\n      <input\r\n        ref={autoCompleteRef}\r\n        className=\"form-control\"\r\n        onChange={(event) => setQuery(event.target.value)}\r\n        placeholder=\"Search Places ...\"\r\n        value={query}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchLocationInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,yBAAyB,QAAQ,wBAAwB;AAAC;AAEnE,MAAMC,mBAAmB,GAAG,QAA6B;EAAA;EAAA,IAA5B;IAAEC;EAAoB,CAAC;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMM,eAAe,GAAGP,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMS,gBAAgB,GAAG,MAAM;IAC7B,MAAMC,oBAAoB,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY,CACrET,eAAe,CAACU,OAAO,EACvB;MACEC,qBAAqB,EAAE;QAAEC,OAAO,EAAE;MAAK;IACzC,CAAC,CACF;IAEDR,oBAAoB,CAACS,WAAW,CAAC,eAAe,EAAEC,iBAAiB,CAAC;IACpEZ,eAAe,CAACE,oBAAoB,CAAC;EACvC,CAAC;EAED,MAAMU,iBAAiB,GAAG,MAAM;IAAA;IAC9B,MAAMC,aAAa,GAAGd,YAAY,CAACe,QAAQ,EAAE;IAE7C,MAAMlB,KAAK,GAAGiB,aAAa,CAACE,iBAAiB;IAC7ClB,QAAQ,CAACD,KAAK,CAAC;IAEf,MAAMoB,MAAM,GAAG;MACbC,GAAG,EAAEJ,aAAa,aAAbA,aAAa,gDAAbA,aAAa,CAAEK,QAAQ,oFAAvB,sBAAyBC,QAAQ,2DAAjC,uBAAmCF,GAAG,EAAE;MAC7CG,GAAG,EAAEP,aAAa,aAAbA,aAAa,iDAAbA,aAAa,CAAEK,QAAQ,qFAAvB,uBAAyBC,QAAQ,2DAAjC,uBAAmCC,GAAG;IAC7C,CAAC;IAEDzB,mBAAmB,CAACqB,MAAM,CAAC;EAC7B,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,MAAM,CAACC,MAAM,EAAE;MAClB,MAAMiB,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,IAAI,GAAG,iBAAiB;MAC/BH,MAAM,CAACI,GAAG,GAAI,+CAA8ChC,yBAA0B,mBAAkB;MACxG4B,MAAM,CAACK,KAAK,GAAG,IAAI;MACnBL,MAAM,CAACM,MAAM,GAAG1B,gBAAgB;MAEhCqB,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,MAAM,CAAC;MAEjC,OAAO,MAAM;QACXC,QAAQ,CAACM,IAAI,CAACE,WAAW,CAACT,MAAM,CAAC;MACnC,CAAC;IACH,CAAC,MAAM;MACLpB,gBAAgB,EAAE;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,uBAAuB;IAAA,wBACpC;MAAA,UAAO;IAA+B;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC9C;MACE,GAAG,EAAEH,eAAgB;MACrB,SAAS,EAAC,cAAc;MACxB,QAAQ,EAAGiC,KAAK,IAAKlC,QAAQ,CAACkC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MAClD,WAAW,EAAC,mBAAmB;MAC/B,KAAK,EAAErC;IAAM;MAAA;MAAA;MAAA;IAAA,QACb;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA7DIF,mBAAmB;AAAA,KAAnBA,mBAAmB;AA+DzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}