{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejas\\\\OneDrive\\\\Documents\\\\CION\\\\Hyderabad_Map_Project\\\\google-places-api-demo\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleMap, useLoadScript, Polygon } from \"@react-google-maps/api\";\nimport { REACT_APP_GOOGLE_MAPS_KEY } from \"../constants/constants\";\nimport boundaryGeoJSON from \"./boundary.js\"; // Adjust the path as per your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = _ref => {\n  _s();\n  let {\n    selectedLocation\n  } = _ref;\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY,\n    libraries: [\"places\"]\n  });\n  const [geoJsonData, setGeoJsonData] = useState(null);\n  useEffect(() => {\n    // Simulate loading GeoJSON data\n    setTimeout(() => {\n      setGeoJsonData(boundaryGeoJSON);\n    }, 1000);\n  }, []);\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"100%\"\n  };\n  const center = {\n    lat: selectedLocation.lat || 17.385044,\n    // Default to Hyderabad's center if selectedLocation is not available\n    lng: selectedLocation.lng || 78.486671\n  };\n  const zoom = 10;\n\n  // Define colors for different pincodes (adjust as needed)\n  const pincodeColorMap = {\n    \"500001\": {\n      strokeColor: \"#FF0000\",\n      // Red stroke color\n      fillColor: \"#FF0000\" // Red fill color\n    },\n\n    \"500002\": {\n      strokeColor: \"#00FF00\",\n      // Green stroke color\n      fillColor: \"#00FF00\" // Green fill color\n    }\n    // Add more pincodes and colors as needed\n  };\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: center,\n      zoom: zoom,\n      children: geoJsonData && geoJsonData.features.map((feature, index) => {\n        const pincode = feature.properties.pincode; // Adjust this based on your GeoJSON structure\n        const colorOptions = pincodeColorMap[pincode];\n        if (!colorOptions) {\n          console.warn(`Pincode ${pincode} color not defined`);\n          return null;\n        }\n        return /*#__PURE__*/_jsxDEV(Polygon, {\n          paths: feature.geometry.coordinates[0].map(coord => ({\n            lat: coord[1],\n            lng: coord[0]\n          })),\n          options: {\n            strokeColor: colorOptions.strokeColor,\n            strokeOpacity: 0.8,\n            strokeWeight: 2,\n            fillColor: colorOptions.fillColor,\n            fillOpacity: 0.35\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"e7kYwu1G37gdK4rN6Z6Qm3CFf5g=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","useLoadScript","Polygon","REACT_APP_GOOGLE_MAPS_KEY","boundaryGeoJSON","MapComponent","selectedLocation","isLoaded","loadError","googleMapsApiKey","libraries","geoJsonData","setGeoJsonData","setTimeout","mapContainerStyle","width","height","center","lat","lng","zoom","pincodeColorMap","strokeColor","fillColor","features","map","feature","index","pincode","properties","colorOptions","console","warn","geometry","coordinates","coord","strokeOpacity","strokeWeight","fillOpacity"],"sources":["C:/Users/tejas/OneDrive/Documents/CION/Hyderabad_Map_Project/google-places-api-demo/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { GoogleMap, useLoadScript, Polygon } from \"@react-google-maps/api\";\r\nimport { REACT_APP_GOOGLE_MAPS_KEY } from \"../constants/constants\";\r\nimport boundaryGeoJSON from \"./boundary.js\"; // Adjust the path as per your project structure\r\n\r\nconst MapComponent = ({ selectedLocation }) => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY,\r\n    libraries: [\"places\"],\r\n  });\r\n  const [geoJsonData, setGeoJsonData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Simulate loading GeoJSON data\r\n    setTimeout(() => {\r\n      setGeoJsonData(boundaryGeoJSON);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const mapContainerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  };\r\n\r\n  const center = {\r\n    lat: selectedLocation.lat || 17.385044, // Default to Hyderabad's center if selectedLocation is not available\r\n    lng: selectedLocation.lng || 78.486671,\r\n  };\r\n\r\n  const zoom = 10;\r\n\r\n  // Define colors for different pincodes (adjust as needed)\r\n  const pincodeColorMap = {\r\n    \"500001\": {\r\n      strokeColor: \"#FF0000\", // Red stroke color\r\n      fillColor: \"#FF0000\", // Red fill color\r\n    },\r\n    \"500002\": {\r\n      strokeColor: \"#00FF00\", // Green stroke color\r\n      fillColor: \"#00FF00\", // Green fill color\r\n    },\r\n    // Add more pincodes and colors as needed\r\n  };\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading maps\";\r\n\r\n  return (\r\n    <div style={{ height: \"100%\", width: \"100%\" }}>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        center={center}\r\n        zoom={zoom}\r\n      >\r\n        {geoJsonData &&\r\n          geoJsonData.features.map((feature, index) => {\r\n            const pincode = feature.properties.pincode; // Adjust this based on your GeoJSON structure\r\n            const colorOptions = pincodeColorMap[pincode];\r\n\r\n            if (!colorOptions) {\r\n              console.warn(`Pincode ${pincode} color not defined`);\r\n              return null;\r\n            }\r\n\r\n            return (\r\n              <Polygon\r\n                key={index}\r\n                paths={feature.geometry.coordinates[0].map((coord) => ({\r\n                  lat: coord[1],\r\n                  lng: coord[0],\r\n                }))}\r\n                options={{\r\n                  strokeColor: colorOptions.strokeColor,\r\n                  strokeOpacity: 0.8,\r\n                  strokeWeight: 2,\r\n                  fillColor: colorOptions.fillColor,\r\n                  fillOpacity: 0.35,\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}